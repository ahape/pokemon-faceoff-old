Groundwork/Basic Functionality
=================================
[x] Add /scripts/* to .gitignore

[x] Change types a little bit:

    [x] IPokemon -> IPokemonDetails.
    [x] PokemonVm.toJSON() -> IPokemon.
        [x] Get rid of computed `pokemon` that is actually IPokemonDetails,
            rename `pokemonJson` to `pokemon`.
    [x] Get rid of types enum, just use string value.

[x] Check that your damage calculation matches the result when run through
    the logic from here:
    https://github.com/smogon/damage-calc/blob/master/calc/src/mechanics/gen12.ts
    https://calc.pokemonshowdown.com/?gen=1

    [x] Better yet, check against the formulas found here:
        https://gamefaqs.gamespot.com/gameboy/907714-pokemon-blue-version/faqs/64175
        Section [M00].

[x] Add correct Nidoran names (-f, -m).

[x] Fix bugs with calculation:

    [x] 1HKO moves don't show 0% on enemy HP bar.

[x] Fix incorrect move stats. See this article for the correct stats:
    https://gamefaqs.gamespot.com/gameboy/907714-pokemon-blue-version/faqs/64175
    Section [L04].
    - Gust being "flying" type.
    - Tackle being 35P.

[x] Add <empty> move option (deals no damage).

[x] Have first four moves be prepopulated by deducing learnset moves and level.

    - Walk through learnset for pokemon, collecting all moves under level,
      capping at 4.
    - This needs to be in some sort of loop that increases index of move slot
      every added move.

[x] Combine column MIN/MAX H-KO and output e.g. 2/3.

[x] Add column CRIT MIN H-KO.

[x] Remove duplicate learnset move entries for evolved types.

    [x] Make sure that all moves in `learnset` match `moves`.

[ ] Add edge case moves and their damage.

    [ ] Like Hyper Beam not affecting ghost types?

    [ ] Look through moves list and determine oddballs.

[ ] Add basic unit tests for the functions.

    [ ] Add tests that compare correct outputs.

[-] Streamline project.

    [x] In tsconfig, move KO to devDependencies.

Prettify UI/UX
=================

[ ] Import photos to use for Pokemon

[ ] Improve styling.

[ ] Add color to HP bar.

[ ] Save inputs to localStorage to avoid page refreshing clearing all inputs.

Advanced Features
====================

[ ] Add inputs for stat modifiers: (+1...6,-1...-6).

    [ ] Add same for opponent.

[ ] Don't have *changed* moves reset upon level change.

[ ] Remember the moves you had set last time you selected a specific Pokemon?

Documentation/Walkthrough
=========================

[ ] Goals (v1)

    - Have every section be for a location (e.g. Route 1, Pallet Town).
    - Have it be in the order that the game suggests it be played.
    - Each location should have all of the following that apply:
        - Map (image. E.g. Route 1, Lavender Town, Silph Co., Gym)
          * Need caption (BF1, FL2, etc.)
          * Need arrow for quickest/safest passage (where not obvious)
          * Need numbered tags (trainers, [hidden] items, labels (for like
            ladders and such))
            - Trainers (table)
              * Ref (tag number)
              * Name (Jr. Trainer, Brock, Blue)
              * Pokemon + level (comma separated)
              * Prize money
            - Available Items (table)
              * Ref (tag number)
              * Name (TM01 - Mega Punch, Moon Stone, etc.)
              * Games (R/B)
            - Available Pokemon (table)
              * Pokemon
              * Levels (4-5, 4-5/5-6)
              * Rate (10%, 20%/45%)
              * Games (R/B)
        - PokeMart Items (table)
          * Item
          * Price

[ ] Tasks

    [ ] Create /images directory.

    [ ] An easy way to capture all of the routes/towns is go to
        https://www.serebii.net/pokearth/maps/kanto-rb/1.png and
        keep incrementing the numbers, downloading each image.

    [ ] Get every image needed.
        - Split up "floors", gyms, etc. *NOTE*: Some  don't need to be
          split. E.g. Celadon store, S.S.Anne, etc.
        - Make sure all images contain characters and items

    [ ] Tag all trainers, items (including hidden).

    [ ] Draw arrow for quickest route.

    [ ] Label all connecting portals.

    [ ] Start writing guide by adding all sections and images.
        For each "part":
        - Copy over the sections, trainers, items, wilds, etc.
          - Color each "thing" so they can be organized correctly
        - BREAK each section with:
        ****
        PART N START
        ****
        - NOTE: Order should be Blue, Green, Red, Orange
        - NOTE: Not all Blue trainers copied over (ex in part11)
        - Go through each tab and organize the sections
          - Remove redundant headers as needed
        - Header for trainers table
          [options="header"]
          |====
          |ID |Trainer |Prize Money |Pokemon
          (...)
          |====

    [ ] Add all gyms
    [ ] Add SS Anne
    [ ] Double check you added everything

    [x] Narrow down our data to scrape/process
        - Collect all "wanted" HTML stuff.
        - Throw all HTML into standalone files (scraping/part1.html, ...)
        - Different types of tables:
        x Wild pokemon
          - Headers: Pokemon, Games, Location, Levels, Rate
        x Items
          - Headers: Item, Location, Games
        x Trainers
          - Table has <big> element w/in
        x Purchaseables
          - Table has <td rowspan="2">, <td>, <td><big>

    [x] Create processing functions (converting HTML to AsciiDoc)
        - Account for all types of tables
        - Include placeholder columns (ref)

    [ ] Add legendary birds to walkthrough, and Mewtwo.

Lastly
=========
[ ] Message KidZero about following issues:
    - Battle formula is wrong: min -> max
    - Bubble is wrong: should be type water